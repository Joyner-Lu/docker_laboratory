filter {
  #add default field with empty value	
  #classification
  #业务日志
  if [classification] == "application" {
    #process application log
	#1、url访问日志
	#2、外部系统交易日志
	#3、app日志
	grok {
		keep_empty_captures => true
		match => { 
			"message" => ["^%{TIMESTAMP_ISO8601:log_time} \[%{TRACE_ID:traceId}?\|%{DJXH:djxh}?\|%{ELK_HOSTPORT:serverNodeIp}?\|%{APP:app}\] %{LOGLEVEL:loglevel}%{SPACE}%{JAVACLASS:class}%{SPACE_DASH}%{NUMBER:executeTime} %{URIPATH:tj_url}$",
"^%{TIMESTAMP_ISO8601:log_time} \[%{TRACE_ID:traceId}?\|%{DJXH:djxh}?\|%{ELK_HOSTPORT:serverNodeIp}?\|%{APP:app}\] %{LOGLEVEL:loglevel}%{SPACE}%{JAVACLASS:class}%{SPACE_DASH}%{TID:tid} %{SID:sid} %{EXP_TYPE:expType} (#\[)%{DATA:requestPacket}(\]#) (#\[)%{DATA:respondPacket}(\]#) %{NUMBER:executeTime}%{SPACE_DASH}%{MSG_WITH_BR:exceptionStack}$",
"^%{TIMESTAMP_ISO8601:log_time} \[%{TRACE_ID:traceId}?\|%{DJXH:djxh}?\|%{ELK_HOSTPORT:serverNodeIp}?\|%{APP:app}\] %{LOGLEVEL:loglevel}%{SPACE}%{LOG_PRINTER:class}%{SPACE_DASH}%{MSG_WITH_BR:logMsg}"]
		}
		
	}
	
	#处理时间
	date {
		match => ["log_time", "ISO8601"]  #这里是如果log_time跟后面的格式匹配，就会替换target默认的@timestamp
		timezone => "Asia/Shanghai"
	}
	
	#去掉message字段开头的时间戳
	#mutate {
		#gsub => ["message", "^(\d{4}[-/]\d{2}[-/]\d{2} )?\d{2}:\d{2}:\d{2}[\.,:]\d{3} ", ""]
	#}

	if [tj_url] {
		#处理请求耗时日志（
		mutate {
			remove_field => [ "logType" ]
		}
		mutate {
			add_field => { "logType" => "url" }
		}
		mutate {
                        convert => {
                                "executeTime" => "integer"
                        }
                }

	} else if [tid] {
		#处理外部系统交易性日志
		mutate {
			remove_field => [ "logType" ]
		}
		mutate {
			add_field => { "logType" => "services" }
		}
		mutate {
                        convert => {
                                "executeTime" => "integer"
                        }
                }

	} else if [app] {
		#对业务日志进行分类
		mutate {
			remove_field => [ "logType" ]
		}
		mutate {
			add_field => { "logType" => "biz" }
		}
	} else {
		#不满足格式的日志存其它
		mutate {
				remove_field => [ "logType" ]
			}
		mutate {
			add_field => { "logType" => "other" }
		}
	}
	
  } else if [classification] == "performance" {
	#性能日志
    #process performance log
	#1、性能聚合日志
	#2、mysql、oracle访问性能日志
	#3、mongo访问性能日志
	grok {
		keep_empty_captures => true
		match => {
			"message" => ["^%{TIMESTAMP_ISO8601:log_time} \[%{TRACE_ID:traceId}?\|%{DJXH:djxh}?\|%{ELK_HOSTPORT:serverNodeIp}?\|%{APP:app}\] %{LOGLEVEL:loglevel}%{SPACE}%{JAVACLASS:class}%{SPACE_DASH}%{FUNC_ID:funcId} \[%{PERFORMANCE_TOPIC:topic} %{PERFORMANCE_OT:secondTopic}? %{PERFORMANCE_OT:thirdTopic}? %{PERFORMANCE_OT:other}?\] %{MY_TIMESTAMP:startTime} %{MY_TIMESTAMP:endTime} %{NUMBER:averageTimes} %{NUMBER:invocationTimes} %{GREEDYDATA:per_tjhs}$",
"^%{TIMESTAMP_ISO8601:log_time} \[%{TRACE_ID:traceId}?\|%{DJXH:djxh}?\|%{ELK_HOSTPORT:serverNodeIp}?\|%{APP:app}\] %{LOGLEVEL:loglevel}%{SPACE}%{JAVACLASS:class}%{SPACE_DASH}%{NUMBER:executeTime} %{JAVACLASS:sqlId} (#\[)%{DATA:parameters}(\]#) %{GREEDYDATA:sql}$",
"^%{TIMESTAMP_ISO8601:log_time} \[%{TRACE_ID:traceId}?\|%{DJXH:djxh}?\|%{ELK_HOSTPORT:serverNodeIp}?\|%{APP:app}\] %{LOGLEVEL:loglevel}%{SPACE}%{JAVACLASS:class}%{SPACE_DASH}%{NUMBER:executeTime} %{MONGO_METHOD:methodName} (#\[)%{DATA:script}(\]#) %{USERNAME:collection}$"]
		}
		
	}
	
	#处理时间
	date {
		match => ["log_time", "ISO8601"]  #这里是如果log_time跟后面的格式匹配，就会替换target默认的@timestamp
		timezone => "Asia/Shanghai"
	}
	
	#去掉message字段开头的时间戳
	#mutate {
		#gsub => ["message", "^(\d{4}[-/]\d{2}[-/]\d{2} )?\d{2}:\d{2}:\d{2}[\.,:]\d{3} ", ""]
	#}

	if[per_tjhs]{
		#如果per_tjhs存在
		json { 
			source => "per_tjhs"
		}
		mutate {
			remove_field => ["logType"]
		}
		mutate {
			add_field => { "logType" => "performance" }
		}
		mutate {
			convert => {
				"averageTimes" => "float"
			}
		}
		mutate {
			convert => {
				"invocationTimes" => "integer"
			}
		}

	} else if [sqlId] {
		#处理数据库性能日志
		mutate {
			remove_field => [ "logType" ]
		}
		mutate {
			add_field => { "logType" => "database" }
		}
		mutate {
                        convert => {
                                "executeTime" => "integer"
                        }
                }

	} else if [script] {
		#处理mongo操作性能日志
		mutate {
			remove_field => [ "logType" ]
		}
		mutate {
			add_field => { "logType" => "mongo" }
		}
		mutate {
                        convert => {
                                "executeTime" => "integer"
                        }
                }

	} else {
		#不满足格式的日志存其它
		mutate {
				remove_field => [ "logType" ]
			}
		mutate {
			add_field => { "logType" => "other" }
		}
	}
	
  } else if [classification] == "apache" {
    #process apache log
  } else {
	#不满足格式的日志存其它
	mutate {
			remove_field => [ "logType" ]
		}
	mutate {
		add_field => { "logType" => "other" }
	}
  }
  
	  
}
